#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_biofuel <- db_biofuel %>%
#     rbind.data.frame(data)
# }
#
# write.xlsx(db_biofuel %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedBiofuel.xlsx")), row.names = F)
db_biofuel <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedBiofuel.xlsx"))
options(scipen = 999)
db_biofuel_agg <- db_biofuel %>%
group_by(year, Pathway, ALPHA3) %>%
mutate(biofuel_use = sum(biofuel)) %>%
ungroup() %>%
select(-fproduct, -biofuel) %>%
unique()
db_change_biofuel <- db_biofuel_agg %>%
mutate(var_pivot = paste0("biofuel_", year)) %>%
select(var_pivot, Pathway, ALPHA3, biofuel_use) %>%
pivot_wider(names_from = var_pivot,
values_from = c(biofuel_use)) %>%
mutate(biofuel_use_change = round(biofuel_2050/biofuel_2020, 2)) %>%
replace_na(list(biofuel_use_change = 1)) %>%
select(ALPHA3, Pathway, biofuel_use_change)
#Post-harvest losses --------------------------------------
################ Computing aggregated product production by crop/livestock for Post-harvest losses ###########
mapping_crop_live<- read_excel(here("data", "mapping_product_group.xlsx"),
sheet = "Sheet2") %>%
rename(product = PRODUCT)
product_by_type <- product %>%
inner_join (mapping_crop_live, by ="product") %>%
dplyr::filter(Lprod_group %in% c("crop", "livestock")) %>%
group_by(year, pathway, ALPHA3, Lprod_group) %>%
mutate(production = sum(prodq_feas)) %>%
dplyr::filter(year %in% c(2020, 2050)) %>%
select (-product) %>%
select(-import_quantity:-PROD_GROUP, -pathway_id,-tradeadjustment) %>%
unique() %>%
mutate(year = as.character(year)) %>%
mutate(pathway = recode(pathway, "CurrentTrends" = "CurrentTrend")) %>%
mutate(pathway = recode(pathway, "NationalCommitment" = "NationalCommitments"))
#Post-harvest: livestock
#Extracting data from the Calculators - only run when needed
# db_ph_loss_live <- data.frame()
#
# for (cur_file in file){
#   #extract the righ sheet in Calculator
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "2_calc_livestock",
#                      range = "A30:AG173")
#
#   #Colnames are lower in the SWE calculator
#   if(grepl("SWE", cur_file)){
#     data <- read_excel(here("data", "Calcs_new", cur_file),
#                        sheet = "2_calc_livestock",
#                        range = "A31:AG174")
#   }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     rename_all(.funs = tolower) %>%
#     select(year, fproduct, shloss) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability")))
#
#
#
#
#   db_ph_loss_live <- db_ph_loss_live %>%
#     rbind.data.frame(data)
# }
#
#
# write.xlsx(db_ph_loss_live %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPh_loss_live.xlsx")), row.names = F)
#Post-harvest: crops
# db_ph_loss_crop <- data.frame()
#
# for (cur_file in file){
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "3_calc_crops",
#                      range = "G28:AX798")
#   # if(grepl("SWE", cur_file)){
#   # data <- read_excel(here("data", "Calcs", cur_file),
#   #                      sheet = "2_calc_livestock",
#   #                      range = "BH31:BU75")
#   # }
#
#   data <- data %>%
#     slice(which(YEAR %in% c(2020, 2050))) %>%
#     rename_all(.funs = tolower) %>%
#     select(year, fproduct, shlossinput) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "R_ASP",
#                            ifelse(ALPHA3 == "R_C", "R_CSA",
#                                   ifelse(ALPHA3 == "R_N", "R_NEU",
#                                          ifelse(ALPHA3 == "R_O", "R_OEU",
#                                                 ifelse(ALPHA3 == "R_S", "R_SSA",
#                                                        ifelse(ALPHA3 == "RME", "R_NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability")))
#
#
#
#
#   db_ph_loss_crop <- db_ph_loss_crop %>%
#     rbind.data.frame(data)
# }
#
#
# write.xlsx(db_ph_loss_crop %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_ExtractedPh_loss_crop.xlsx")), row.names = F)
db_ph_loss_crop <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedPh_loss_crop.xlsx")) %>%
rename(shloss = shlossinput) %>%
mutate(fproduct = tolower(fproduct)) %>%
dplyr::filter(year==2050)
db_ph_loss_live <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_ExtractedPh_loss_live.xlsx")) %>%
mutate(fproduct = tolower(fproduct))  %>%
dplyr::filter(year==2050)
db_ph_loss <-db_ph_loss_live %>%
rbind(db_ph_loss_crop) %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "R_ASP", "ASP",
ifelse(ALPHA3 == "R_CSA", "CSA",
ifelse(ALPHA3 == "R_NEU", "NEU",
ifelse(ALPHA3 == "R_OEU", "OEU",
ifelse(ALPHA3 == "R_SSA", "SSA",
ifelse(ALPHA3 == "R_NMC", "NMC", ALPHA3)))))))
#Post-harvest: kcal content per product
#
# db_kcalcontent <- data.frame()
#
# for (cur_file in file){
#   #???Extract the right sheet from calculators
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                      sheet = "1_calc_human_demand",
#                      range = "A27:AP1116")
#
#   if(grepl("DNK|GRC|NPL|R_ASP|R_CSA|R_NEU|R_OEU|R_SSA|RMECAS|TUR", cur_file)){
#   data <- read_excel(here("data", "Calcs_new", cur_file),
#                        sheet = "1_calc_human_demand",
#                        range = "A31:AQ1116")
#   }
#
#
#
#   data <- data %>%
#     slice(which(year %in% c(2020, 2050))) %>%
#     rename_all(.funs = tolower) %>%
#     select(year, fproduct, kcalkg, cocapday) %>%
#     mutate(ALPHA3 = ifelse(grepl("Current", cur_file),
#                            str_sub(cur_file, 40, 42),
#                            ifelse(grepl("National", cur_file), str_sub(cur_file, 46, 48),
#                                   str_sub(cur_file, 47, 49)))) %>%
#     mutate(ALPHA3 = ifelse(ALPHA3 == "R_A", "ASP",
#                            ifelse(ALPHA3 == "R_C", "CSA",
#                                   ifelse(ALPHA3 == "R_N", "NEU",
#                                          ifelse(ALPHA3 == "R_O", "OEU",
#                                                 ifelse(ALPHA3 == "R_S", "SSA",
#                                                        ifelse(ALPHA3 == "RME", "NMC", ALPHA3))))))) %>%
#     mutate(Pathway = ifelse(grepl("Current", cur_file),
#                             "CurrentTrend",
#                             ifelse(grepl("National", cur_file),
#                                    "NationalCommitments",
#                                    "GlobalSustainability"))) %>%
#     unique()
#
#   db_kcalcontent <- db_kcalcontent %>%
#     rbind.data.frame(data)
# }
#
# write.xlsx(db_kcalcontent %>% data.frame(), file = here("data", "extracted_scenathon", paste0(gsub("-", "",Sys.Date()), "_Extractedkcalcontent.xlsx")), row.names = F)
db_kcalcontent <- readxl::read_excel(here("data", "extracted_scenathon", "20240523_Extractedkcalcontent.xlsx")) %>%
mutate(kcalcontent = kcalkg * cocapday) %>%
mutate(fproduct = tolower(fproduct)) %>%
select(-kcalkg, -cocapday)
db_ph_loss_change <- db_ph_loss %>%
left_join(db_kcalcontent) %>%
dplyr::filter(year == 2050) %>%
unique() %>%
group_by(ALPHA3, Pathway) %>%
mutate(kcalcontent_total = sum(kcalcontent, na.rm = TRUE)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway, fproduct) %>%
mutate(kcalcontent_per_prod = ifelse(is.na(kcalcontent), NA, kcalcontent / kcalcontent_total)) %>%
ungroup() %>%
group_by(ALPHA3, Pathway) %>%
mutate(share_ph_loss = (shloss*kcalcontent_per_prod)) %>%
mutate(share_ph_loss_final = round(sum(share_ph_loss, na.rm = TRUE)*100, 4)) %>%
ungroup() %>%
select(ALPHA3, Pathway, share_ph_loss_final) %>%
unique()
# data final --------------------------------------------------------------
data_final <- df_change %>%
left_join(db_change_crop) %>%
left_join(db_change_Live_Prod) %>%
left_join(db_change_RumDensity) %>%
left_join(product_tot) %>%
left_join(db_change_Expansion) %>%
left_join(db_change_afforestation) %>%
left_join(db_change_foodwaste) %>%
left_join(db_change_pa) %>%
left_join(db_change_irr) %>%
left_join(db_change_agrprac) %>%
left_join(db_change_biofuel) %>%
# left_join(db_ph_loss_change) %>%
dplyr::filter(ALPHA3 != "WORLD")
data_final_FABLE <- data_final %>%
data.frame()
melted <- melt(data_final_FABLE, id.vars = c("ALPHA3", "Pathway", "afforestation", "agricultural_land_expansion"))
melted$value <- ifelse(melted$variable == "pa", melted$value,
ifelse(melted$variable == "irr_change", melted$value,
ifelse(melted$variable == "agrprac_change", melted$value,
ifelse(melted$variable == "share_ph_loss_final", melted$value,
ifelse(melted$variable == "Foodwaste_change", melted$value,
ifelse(
melted$value!= "NaN" & melted$variable != "Affor",
melted$value-1,
ifelse(melted$variable == "Affor",
melted$value,
NA)))))))
melted$sign <- ifelse(melted$value < 0,
0,
1)
complete_data <- melted %>%
select(-afforestation, -agricultural_land_expansion)
# %>%
#   mutate(value = ifelse(variable %in% c("Population_change", "kcal_targ_change", "pdty_crop_change",
#                                         "pdty_live_change", "density_change", "Export_quantity_change",
#                                         "Import_quantity_change", "Foodwaste_change", "pa", "agrprac_change",
# "irr_change", "biofuel_use_change"), value * 100, value))
### All info in one graph
var.labs <- c(
Population_change = "Population",
kcal_targ_change = "Calories \nper Capita",
pdty_crop_change = "Crops \nProductivity",
pdty_live_change = "Livestock \nProductivity",
density_change = "Ruminant \nDensity ",
Expansion_change ="Agricultural \nexpansion \n(i)",
Export_quantity_change = "Exports \n(kcal)",
Import_quantity_change = "Imports \n(kcal)",
Foodwaste_change = "Share of \n Food Waste \n(iii)",
Affor = "Afforestation \n(Mha) \n(ii)",
pa= "Protected \n Areas \n(iv)",
irr_change= "Irrigated \nArea",
agrprac_change= "Area under \nagroecological \npractises",
biofuel_use_change="Biofuels \nuse"
)
# share_ph_loss_final="Post harvest \nloss"
complete_data$Pathway <- factor(as.character(complete_data$Pathway), levels = c("GlobalSustainability", "NationalCommitments", "CurrentTrend"))
complete_data <- complete_data %>%
mutate(ALPHA3 = ifelse(ALPHA3 == "GBR",
"UK",
ALPHA3))
complete_data$ALPHA3 <- gsub("^R_", "", complete_data$ALPHA3)
complete_data$ALPHA3 <- factor(as.character(complete_data$ALPHA3), levels = c("ARG", "AUS", "BRA", "CAN",
"CHN", "COL", "DEU", "DNK","ETH",
"FIN", "GRC","IDN", 'IND',
"MEX", "NPL", "NOR", "RUS",
"RWA", "SWE", "TUR", "UK", "USA",
"ASP", "CSA", "NEU", "NMC",
"OEU", "SSA"))
# Define the order of Pathway levels
pathway_order <- c("CurrentTrend", "NationalCommitments", "GlobalSustainability")
#Plot
create_plot <- function(data, alpha3) {
ggplot(data, aes(y = value, x = reorder(Pathway, -as.numeric(factor(Pathway, levels = pathway_order))), group = ALPHA3, fill = sign)) +
geom_col(position = "dodge", show.legend = FALSE) +
ylab("Relative change between 2020 and 2050 (2020=0)") +
coord_flip() +
scale_x_discrete(labels = c(GlobalSustainability = "GS",
NationalCommitments = "NC",
CurrentTrend ="CT")) +
scale_y_continuous(n.breaks = 3) +
geom_hline(yintercept = 0, linetype = "dashed", size = 2) +
facet_wrap(~ variable,
switch = "y",
labeller = labeller(variable = var.labs),
drop = TRUE,
nrow = 3,
scales = "free_x") +
# scale_fill_manual(values = c("#D5EB4B", "#66BB6A")) +
theme(
panel.background = element_rect(fill = '#F2F2F2'),
panel.grid  = element_blank(),
strip.placement = "outside",
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
legend.background = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 16),
strip.text = element_text(size = 20, face = "bold"),
panel.spacing.x = unit(2, "lines"),
plot.caption = element_text(size = 18),
strip.text.y.left = element_text(angle = 0),
axis.text = element_text(size = 18),
axis.title.x = element_text(size = 24),
axis.line.x = element_line()
)  +
labs(caption = "(i) Results are expressed in code, taking the value 1 for 'Free expansion scenario', -0.5 for 'No deforestation' and -1 for 'No Agricultural expansion'.
\n(ii) Results are expressed in net increase rather than relative change.
\n(iii) Results are expressed % of consumption which is wasted.
\n(iv) Results are expressed in % of total land in 2050.")
}
# Define the output directory
figure_directory <- here("output", "figures", "scenarios_assumption", paste0(gsub("-", "", Sys.Date())))
dir.create(figure_directory, recursive = TRUE, showWarnings = FALSE)
print(figure_directory)
unique_alpha3 <- unique(complete_data$ALPHA3)
for (alpha3 in unique_alpha3) {
data_filtered <- complete_data %>% filter(ALPHA3 == alpha3)
p <- create_plot(data_filtered)
filename <- paste0(gsub("-", "", Sys.Date()), "_", gsub(" ", "_", alpha3), ".tiff")
tiff(
filename = here(figure_directory, filename),
units = "in", height = 12, width = 35, res = 600
)
print(p)
dev.off()
}
## Share of cropland under agroecological practises
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicts_prefer(dplyr::filter)
here()
#Data -------------------------------------------------------------------
scenathon <- read_csv(here("data", "240523_FullDataBase.csv")) %>%
rename(alpha3 = country, Pathway = pathway, Year = year) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015", "2025", "2035", "2045")) %>%
select(alpha3,Pathway, Year, agroecosh, calccropland) %>%
mutate(agroecland = agroecosh*calccropland/1000 ) %>%
mutate(nonagroecland = (1-agroecosh)*calccropland/1000) %>%
filter(!Year %in% c("2000", "2005", "2010", "2015"))
scenathon_long <- scenathon %>%
pivot_longer(cols = c(nonagroecland, agroecland), names_to = "LandType", values_to = "Value") %>%
group_by(alpha3, Pathway, Year) %>%
mutate(Percentage = round(Value / sum(Value) * 100, 1)) %>%
ungroup()
#Plot Pathway ---------------------------------------------------------------
scenathon_long$Pathway <- factor(scenathon_long$Pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
# List countries
countries <- c(
"ARG", "AUS", "BRA", "CAN", "CHN", "COL", "DEU", "ETH",
"FIN", "GBR", "IDN", "IND", "MEX", "NOR", "RUS", "RWA",
"SWE", "USA", "DNK", "GRC", "TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
figure_directory <- here("output", "figures", "ShAgro", paste0(gsub("-", "", Sys.Date())))
dir.create(figure_directory, recursive = TRUE, showWarnings = FALSE)
print(figure_directory)
# Create plot for each country
plot_list <- list()
for (country in countries) {
# Subset data for the specific country
country_data <- subset(scenathon_long, alpha3 == country)
# Create ggplot for the specific country
p_pathway <- ggplot(country_data, aes(x = as.factor(Year), y = Value, fill = LandType)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(aes(label = paste0(Percentage, "%")), position = position_stack(vjust = 0.5), size = 5, color = "ivory") +
geom_hline(yintercept = 0, linetype = "solid") +
labs(
x = "",
y = "Mha", fill = ""
) +
facet_grid(. ~ Pathway, scales = "free_y",
labeller = labeller(Pathway = c(
"CurrentTrends" = "Current Trend Pathway",
"NationalCommitments" = "National Commitments Pathway",
"GlobalSustainability" = "Global Sustainability Pathway"
))) +
scale_fill_manual(values = c("nonagroecland" = "#9ACD32", "agroecland" = "#006400"),
labels = c("Cropland under conventional practices", "Cropland under agroecological practices")) +
theme_minimal() +
theme(
text = element_text(family = "sans", color = "black", size = 24, face = "bold"),
legend.title = element_text(family = "sans", color = "black", size = 18),
legend.text = element_text(family = "sans", size = 18),
axis.title.x = element_text(color = "black", size = 18),
axis.title.y = element_text(color = "black", size = 18),
legend.position = "bottom",
panel.spacing = unit(2, "cm")
)
# Save the plot as a TIFF file
filename <- paste0(gsub("-", "", Sys.Date()), "_", gsub(" ", "_", country), ".tiff")
tiff(
filename = here(figure_directory, filename),
units = "in", height = 10, width = 20, res = 300
)
print(p_pathway)
dev.off()
}
product <- read.csv(here("data",  "240523_FullProductDataBase.csv")) %>%
rename(Pathway = pathway) %>%
filter(tradeadjustment == "Yes")
View(product)
View(product)
View(product)
View(product)
product <- read.csv(here("data",  "240523_FullProductDataBase.csv")) %>%
rename(Pathway = pathway) %>%
filter(tradeadjustment == "Yes") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015", "2025", "2035", "2045")) %>%
select(country, Pathway, year, workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost
) %>%
scenathon_long <- scenathon %>%
pivot_longer(cols = c(nonagroecland, agroecland), names_to = "LandType", values_to = "Value") %>%
group_by(alpha3, Pathway, Year) %>%
mutate(Percentage = round(Value / sum(Value) * 100, 1)) %>%
ungroup()
product <- read.csv(here("data",  "240523_FullProductDataBase.csv")) %>%
rename(Pathway = pathway) %>%
filter(tradeadjustment == "Yes") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015", "2025", "2035", "2045")) %>%
select(country, Pathway, year, workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost)
product <- read.csv(here("data",  "240523_FullProductDataBase.csv")) %>%
rename(Pathway = pathway) %>%
filter(tradeadjustment == "Yes") %>%
filter(!year %in% c("2000", "2005", "2010", "2015", "2025", "2035", "2045")) %>%
select(country, Pathway, year, workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost)
View(product)
product <- read.csv(here("data",  "240523_FullProductDataBase.csv")) %>%
rename(Pathway = pathway) %>%
filter(tradeadjustment == "Yes") %>%
filter(!year %in% c("2000", "2005", "2010", "2015", "2025", "2035", "2045")) %>%
select(country, Pathway, year, workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost) %>%
group_by(country, Pathway, year)  %>%
summarise(
workersfte = sum(workersfte, na.rm = TRUE),
fertilizercost = sum(fertilizercost, na.rm = TRUE),
labourcost = sum(labourcost, na.rm = TRUE),
machineryrunningcost = sum(machineryrunningcost, na.rm = TRUE),
dieselcost = sum(dieselcost, na.rm = TRUE),
pesticidecost = sum(pesticidecost, na.rm = TRUE)
)
View(product)
View(product)
scenathon_long <- product %>%
pivot_longer(cols = c(workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost), names_to = "CostType", values_to = "Value") %>%
group_by(country, Pathway, Year) %>%
mutate(Percentage = round(Value / sum(Value) * 100, 1)) %>%
ungroup()
scenathon_long <- product %>%
pivot_longer(cols = c(workersfte, fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost), names_to = "CostType", values_to = "Value") %>%
group_by(country, Pathway, year) %>%
mutate(Percentage = round(Value / sum(Value) * 100, 1)) %>%
ungroup()
View(scenathon_long)
#Plot Pathway ---------------------------------------------------------------
scenathon_long$Pathway <- factor(scenathon_long$Pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
# List countries
countries <- c(
"ARG", "AUS", "BRA", "CAN", "CHN", "COL", "DEU", "ETH",
"FIN", "GBR", "IDN", "IND", "MEX", "NOR", "RUS", "RWA",
"SWE", "USA", "DNK", "GRC", "TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
figure_directory <- here("output", "figures", "costs", paste0(gsub("-", "", Sys.Date())))
dir.create(figure_directory, recursive = TRUE, showWarnings = FALSE)
print(figure_directory)
# Create plot for each country
plot_list <- list()
scenathon_long <- product %>%
pivot_longer(cols = c(fertilizercost, labourcost, machineryrunningcost,dieselcost, pesticidecost), names_to = "CostType", values_to = "Value") %>%
group_by(country, Pathway, year) %>%
mutate(Percentage = round(Value / sum(Value) * 100, 1)) %>%
ungroup()
