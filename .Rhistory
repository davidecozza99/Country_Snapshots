ungroup()
print(top_exports)
figure_directory <- here("output", "figures", "Export", paste0(gsub("-", "", Sys.Date())))
dir.create(figure_directory, recursive = TRUE, showWarnings = FALSE)
print(figure_directory)
#Plot Pathway ---------------------------------------------------------------
top_exports$Pathway <- factor(top_exports$Pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
unique_products <- unique(top_exports$Product)
export_products <- c(
"palmkernelcake" = "Palm kernel cake",
"soyabean" = "Soyabean",
"corn" = "Corn",
"wheat" = "Wheat",
"soycake" = "Soy cake",
"palm_oil" = "Palm oil",
"sugarraw" = "Sugar raw",
"rice" = "Rice",
"cassava" = "Cassava",
"banana" = "Banana",
"rapeseed" = "Rapeseed",
"soyoil" = "Soy oil",
"barley" = "Barley",
"orange" = "Orange",
"nuts" = "Nuts",
"sunfloil" = "Sunflower oil",
"fruit_other" = "Other fruits",
"vegetable_other" = "Other vegetables",
"tomato" = "Tomato",
"rubber" = "Rubber",
"sorghum" = "Sorghum",
"palmkerneloil" = "Palm kernel oil",
"peas" = "Peas",
"rapecake" = "Rape cake",
"apple" = "Apple",
"pork" = "Pork",
"cocoa" = "Cocoa",
"potato" = "Potato",
"pinapple" = "Pineapple",
"groundnutcake" = "Groundnut cake",
"coconut" = "Coconut",
"pulses_other" = "Other pulses",
"milk" = "Milk",
"sunflower" = "Sunflower",
"date" = "Date",
"grape" = "Grape",
"onion" = "Onion",
"coffee" = "Coffee",
"lemon" = "Lemon",
"sesame" = "Sesame",
"spices_other" = "Other spices",
"other_oil" = "Other oil",
"oats" = "Oats",
"oilseed_other" = "Other oilseeds",
"rapeoil" = "Rapeseed oil",
"oliveoil" = "Olive oil",
"olive" = "Olive",
"beans" = "Beans",
"plantain" = "Plantain",
"rye" = "Rye",
"tea" = "Tea",
"mutton_goat" = "Mutton/goat",
"lentil" = "Lentil",
"other_olscake" = "Other oilseed cakes",
"cereal_other" = "Other cereals",
"eggs" = "Eggs",
"pepper" = "Pepper"
)
# Create plot for each country and save as TIFF
for (country in countries) {
# Subset data for the specific country
country_data <- subset(top_exports, alpha3 == country)
# Create ggplot for the specific country
p_pathway <- ggplot(country_data, aes(x = Year, y = export_quantity, color = Product)) +
geom_point(size = 2) +  # Use points to show each year
geom_line(size = 1.2, aes(group = Product))+
facet_wrap(~ Pathway, scales = "free_y",
labeller = labeller(Pathway = c(
"CurrentTrends" = "Current Trend Pathway",
"NationalCommitments" = "National Commitments Pathway",
"GlobalSustainability" = "Global Sustainability Pathway"
))) +
labs(
x = "",
y = "million tonnes",
color = ""
) +
scale_color_manual(values = brewer.pal(n = length(unique(country_data$Product)), name = "Set1"),
labels = export_products) +
theme_minimal() +
theme(
text = element_text(family = "sans", color = "black", size = 24, face = "bold"),
legend.title = element_text(family = "sans", color = "black", size = 18),
legend.text = element_text(family = "sans", size = 18),
axis.title.x = element_text(color = "black", size = 18),
axis.title.y = element_text(color = "black", size = 18),
legend.position = "bottom",
panel.spacing = unit(2, "cm")
)
# Save the plot as a TIFF file
filename <- paste0(gsub("-", "", Sys.Date()), "_", gsub(" ", "_", country), ".tiff")
tiff(
filename = here(figure_directory, filename),
units = "in", height = 10, width = 20, res = 300
)
print(p_pathway)
dev.off()
}
## TRADE ###
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
library(RColorBrewer)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicts_prefer(dplyr::filter)
here()
#Data -------------------------------------------------------------------
scenathon<- read_csv(here("data", "240523_FullProductDataBase.csv")) %>%
rename(alpha3 = country, Pathway = pathway, Year = year, Product = product) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015")) %>%
select(alpha3,Pathway, Year, Product, kcalfeasprod, import_quantity, export_quantity) %>%
mutate(import_quantity = import_quantity/1000) %>%
mutate(export_quantity = export_quantity/1000)
#List countries
countries <- c(
"ARG",
"AUS",
"BRA"
, "CAN", "CHN", "COL","DEU",
"ETH"
,"FIN","GBR", "IDN", "IND",
"MEX"
,"NOR", "RUS", "RWA","SWE",  "USA",
"DNK",
"GRC","TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
## #Export ###
get_top_products <- function(country_data) {
# Determine the number of top products based on the country
top_n <- ifelse(unique(country_data$alpha3) %in% c("GBR"), 4,
ifelse(unique(country_data$alpha3) %in% c("NOR"), 3,5))
get_top_products <- function(country_data) {
# Determine the number of top products based on the country
top_n <- ifelse(unique(country_data$alpha3) %in% c("GBR"), 4,
ifelse(unique(country_data$alpha3) %in% c("NOR"), 3,5))
# Calculate top products by export quantity
top_products <- country_data %>%
group_by(Product) %>%
summarise(total_export_quantity = sum(export_quantity, na.rm = TRUE)) %>%
arrange(desc(total_export_quantity)) %>%
slice_head(n = top_n) %>%
pull(Product)
# Filter data for top products
country_data %>%
filter(Product %in% top_products)
}
# Apply the function for each country
top_exports <- lapply(split(scenathon, scenathon$alpha3), get_top_products) %>%
bind_rows()
# Group by Pathway and Year
top_exports <- top_exports %>%
group_by(alpha3, Pathway, Year) %>%
arrange(desc(export_quantity)) %>%
ungroup()
View(top_exports)
## TRADE ###
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
library(RColorBrewer)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicts_prefer(dplyr::filter)
here()
#Data -------------------------------------------------------------------
scenathon<- read_csv(here("data", "240523_FullProductDataBase.csv")) %>%
rename(alpha3 = country, Pathway = pathway, Year = year, Product = product) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015")) %>%
select(alpha3,Pathway, Year, Product, kcalfeasprod, import_quantity, export_quantity) %>%
mutate(import_quantity = import_quantity/1000) %>%
mutate(export_quantity = export_quantity/1000)
#List countries
countries <- c(
"ARG",
"AUS",
"BRA"
, "CAN", "CHN", "COL","DEU",
"ETH"
,"FIN","GBR", "IDN", "IND",
"MEX"
,"NOR", "RUS", "RWA","SWE",  "USA",
"DNK",
"GRC","TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
## #Export ###
get_top_products <- function(country_data) {
# Determine the number of top products based on the country
top_n <- case_when(
unique(country_data$alpha3) == "NOR" ~ 3,
unique(country_data$alpha3) == "GBR" ~ 4,
TRUE ~ 5
)
# Calculate top products by export quantity
top_products <- country_data %>%
group_by(Product) %>%
summarise(total_export_quantity = sum(export_quantity, na.rm = TRUE)) %>%
arrange(desc(total_export_quantity)) %>%
slice_head(n = top_n) %>%
pull(Product)
# Filter data for top products
country_data %>%
filter(Product %in% top_products)
}
# Apply the function for each country
top_exports <- lapply(split(scenathon, scenathon$alpha3), get_top_products) %>%
bind_rows()
# Group by Pathway and Year
top_exports <- top_exports %>%
group_by(alpha3, Pathway, Year) %>%
arrange(desc(export_quantity)) %>%
ungroup()
View(top_exports)
## TRADE ###
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
library(RColorBrewer)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicts_prefer(dplyr::filter)
here()
#Data -------------------------------------------------------------------
scenathon<- read_csv(here("data", "240523_FullProductDataBase.csv")) %>%
rename(alpha3 = country, Pathway = pathway, Year = year, Product = product) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015")) %>%
select(alpha3,Pathway, Year, Product, kcalfeasprod, import_quantity, export_quantity) %>%
mutate(import_quantity = import_quantity/1000) %>%
mutate(export_quantity = export_quantity/1000)
#List countries
countries <- c(
"ARG",
"AUS",
"BRA"
, "CAN", "CHN", "COL","DEU",
"ETH"
,"FIN","GBR", "IDN", "IND",
"MEX"
,"NOR", "RUS", "RWA","SWE",  "USA",
"DNK",
"GRC","TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
## #Export ###
get_top_products <- function(country_data) {
# Determine the number of top products based on the country
top_n <- case_when(
unique(country_data$alpha3) == "NOR" ~ 3,
unique(country_data$alpha3) == "GBR" ~ 4,
TRUE ~ 5
)
# Calculate top products by export quantity
top_products <- country_data %>%
group_by(Product) %>%
summarise(total_export_quantity = sum(export_quantity, na.rm = TRUE)) %>%
arrange(desc(total_export_quantity)) %>%
slice_head(n = top_n) %>%
pull(Product)
# Filter data for top products
country_data %>%
filter(Product %in% top_products)
}
# Apply the function for each country
top_exports <- lapply(split(scenathon, scenathon$alpha3), get_top_products) %>%
bind_rows()
# Group by Pathway and Year
top_exports <- top_exports %>%
group_by(alpha3, Pathway, Year) %>%
arrange(desc(export_quantity)) %>%
ungroup()
View(top_exports)
## TRADE ###
# libraries ---------------------------------------------------------------
library(here)
#library(plyr)
library(dplyr)
library(tidyr)
library(readxl)
library(readr)
library(reshape2)
library(ggplot2)
library(stringr)
library(conflicted)
library(writexl)
library(openxlsx)
library(stats)
library(zoo)
library(cluster)
library(factoextra)
library(RColorBrewer)
conflicted::conflict_prefer("rename", "dplyr")
conflicted::conflict_prefer("mutate", "dplyr")
conflicted::conflict_prefer("summarise", "dplyr")
conflicts_prefer(dplyr::filter)
here()
#Data -------------------------------------------------------------------
scenathon<- read_csv(here("data", "240523_FullProductDataBase.csv")) %>%
rename(alpha3 = country, Pathway = pathway, Year = year, Product = product) %>%
mutate(Pathway = recode(Pathway, "NationalCommitment" = "NationalCommitments")) %>%
filter(iteration == "5") %>%
filter(!Year %in% c("2000", "2005", "2010", "2015")) %>%
select(alpha3,Pathway, Year, Product, kcalfeasprod, import_quantity, export_quantity) %>%
mutate(import_quantity = import_quantity/1000) %>%
mutate(export_quantity = export_quantity/1000)
#List countries
countries <- c(
"ARG",
"AUS",
"BRA"
, "CAN", "CHN", "COL","DEU",
"ETH"
,"FIN","GBR", "IDN", "IND",
"MEX"
,"NOR", "RUS", "RWA","SWE",  "USA",
"DNK",
"GRC","TUR", "NPL",
"R_ASP", "R_CSA", "R_NMC", "R_OEU", "R_NEU", "R_SSA"
)
## #Export ###
get_top_products <- function(country_data) {
# Determine the number of top products based on the country
top_n <- case_when(
unique(country_data$alpha3) == "NOR" ~ 3,
unique(country_data$alpha3) == "GBR" ~ 4,
TRUE ~ 5
)
# Calculate top products by export quantity
top_products <- country_data %>%
group_by(Product) %>%
summarise(total_export_quantity = sum(export_quantity, na.rm = TRUE)) %>%
arrange(desc(total_export_quantity)) %>%
slice_head(n = top_n) %>%
pull(Product)
# Filter data for top products
country_data %>%
filter(Product %in% top_products)
}
# Apply the function for each country
top_exports <- lapply(split(scenathon, scenathon$alpha3), get_top_products) %>%
bind_rows()
# Group by Pathway and Year
top_exports <- top_exports %>%
group_by(alpha3, Pathway, Year) %>%
arrange(desc(export_quantity)) %>%
ungroup()
figure_directory <- here("output", "figures", "Export", paste0(gsub("-", "", Sys.Date())))
dir.create(figure_directory, recursive = TRUE, showWarnings = FALSE)
print(figure_directory)
#Plot Pathway ---------------------------------------------------------------
top_exports$Pathway <- factor(top_exports$Pathway, levels = c("CurrentTrends", "NationalCommitments", "GlobalSustainability"))
unique_products <- unique(top_exports$Product)
export_products <- c(
"palmkernelcake" = "Palm kernel cake",
"soyabean" = "Soyabean",
"corn" = "Corn",
"wheat" = "Wheat",
"soycake" = "Soy cake",
"palm_oil" = "Palm oil",
"sugarraw" = "Sugar raw",
"rice" = "Rice",
"cassava" = "Cassava",
"banana" = "Banana",
"rapeseed" = "Rapeseed",
"soyoil" = "Soy oil",
"barley" = "Barley",
"orange" = "Orange",
"nuts" = "Nuts",
"sunfloil" = "Sunflower oil",
"fruit_other" = "Other fruits",
"vegetable_other" = "Other vegetables",
"tomato" = "Tomato",
"rubber" = "Rubber",
"sorghum" = "Sorghum",
"palmkerneloil" = "Palm kernel oil",
"peas" = "Peas",
"rapecake" = "Rape cake",
"apple" = "Apple",
"pork" = "Pork",
"cocoa" = "Cocoa",
"potato" = "Potato",
"pinapple" = "Pineapple",
"groundnutcake" = "Groundnut cake",
"coconut" = "Coconut",
"pulses_other" = "Other pulses",
"milk" = "Milk",
"sunflower" = "Sunflower",
"date" = "Date",
"grape" = "Grape",
"onion" = "Onion",
"coffee" = "Coffee",
"lemon" = "Lemon",
"sesame" = "Sesame",
"spices_other" = "Other spices",
"other_oil" = "Other oil",
"oats" = "Oats",
"oilseed_other" = "Other oilseeds",
"rapeoil" = "Rapeseed oil",
"oliveoil" = "Olive oil",
"olive" = "Olive",
"beans" = "Beans",
"plantain" = "Plantain",
"rye" = "Rye",
"tea" = "Tea",
"mutton_goat" = "Mutton/goat",
"lentil" = "Lentil",
"other_olscake" = "Other oilseed cakes",
"cereal_other" = "Other cereals",
"eggs" = "Eggs",
"pepper" = "Pepper"
)
# Create plot for each country and save as TIFF
for (country in countries) {
# Subset data for the specific country
country_data <- subset(top_exports, alpha3 == country)
# Create ggplot for the specific country
p_pathway <- ggplot(country_data, aes(x = Year, y = export_quantity, color = Product)) +
geom_point(size = 2) +  # Use points to show each year
geom_line(size = 1.2, aes(group = Product))+
facet_wrap(~ Pathway, scales = "free_y",
labeller = labeller(Pathway = c(
"CurrentTrends" = "Current Trend Pathway",
"NationalCommitments" = "National Commitments Pathway",
"GlobalSustainability" = "Global Sustainability Pathway"
))) +
labs(
x = "",
y = "million tonnes",
color = ""
) +
scale_color_manual(values = brewer.pal(n = length(unique(country_data$Product)), name = "Set1"),
labels = export_products) +
theme_minimal() +
theme(
text = element_text(family = "sans", color = "black", size = 24, face = "bold"),
legend.title = element_text(family = "sans", color = "black", size = 18),
legend.text = element_text(family = "sans", size = 18),
axis.title.x = element_text(color = "black", size = 18),
axis.title.y = element_text(color = "black", size = 18),
legend.position = "bottom",
panel.spacing = unit(2, "cm")
)
# Save the plot as a TIFF file
filename <- paste0(gsub("-", "", Sys.Date()), "_", gsub(" ", "_", country), ".tiff")
tiff(
filename = here(figure_directory, filename),
units = "in", height = 10, width = 20, res = 300
)
print(p_pathway)
dev.off()
}
